// 综合功能测试

// 结构体定义
struct Person {
    string name;
    int age;
    string city;
}

// 函数定义
function abs(x) {
    if (x < 0) {
        return -x;
    } else {
        return x;
    }
}

function max(a, b) {
    if (a > b) {
        return a;
    } else {
        return b;
    }
}

function greet(name, age) {
    return "Hello, " + name + "! You are " + age + " years old.";
}

// 测试结构体实例化
let person1 = Person {name: "John", age: 25, city: "New York"};
print("Person1: " + person1.name + ", Age: " + person1.age + ", City: " + person1.city + "\n");

// 测试函数调用
let result1 = abs(-15);
print("abs(-15) = " + result1 + "\n");

let result2 = max(10, 25);
print("max(10, 25) = " + result2 + "\n");

let greeting = greet("Alice", 30);
print(greeting + "\n");

// 测试混合使用
let person2 = Person {name: "Bob", age: abs(-35), city: "London"};
print("Person2: " + person2.name + ", Age: " + person2.age + ", City: " + person2.city + "\n");

// 测试复杂表达式
let maxAge = max(person1.age, person2.age);
print("Max age: " + maxAge + "\n");

// 测试条件语句
if (person1.age > person2.age) {
    print(person1.name + " is older than " + person2.name + "\n");
} else {
    print(person2.name + " is older than " + person1.name + "\n");
}

// 测试字符串拼接
let info = "Summary: " + person1.name + " (" + person1.age + ") and " + person2.name + " (" + person2.age + ")";
print(info + "\n");
