// 复杂函数测试

function factorial(n) {
    if (n <= 1) {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
}

function fibonacci(n) {
    if (n <= 1) {
        return n;
    } else {
        return fibonacci(n - 1) + fibonacci(n - 2);
    }
}

function max(a, b) {
    if (a > b) {
        return a;
    } else {
        return b;
    }
}

function min(a, b) {
    if (a < b) {
        return a;
    } else {
        return b;
    }
}

function abs(x) {
    if (x < 0) {
        return -x;
    } else {
        return x;
    }
}

// 测试基本函数调用
let result1 = factorial(5);
print("factorial(5) = " + result1 + "\n");

let result2 = fibonacci(8);
print("fibonacci(8) = " + result2 + "\n");

let result3 = max(10, 20);
print("max(10, 20) = " + result3 + "\n");

let result4 = min(10, 20);
print("min(10, 20) = " + result4 + "\n");

let result5 = abs(-15);
print("abs(-15) = " + result5 + "\n");

// 测试嵌套函数调用
let result6 = max(min(5, 10), max(3, 7));
print("max(min(5, 10), max(3, 7)) = " + result6 + "\n");

// 测试字符串函数
function greet(name, age) {
    return "Hello, " + name + "! You are " + age + " years old.";
}

let greeting = greet("Alice", 25);
print(greeting + "\n");

// 测试条件函数
function checkGrade(score) {
    if (score >= 90) {
        return "A";
    } else if (score >= 80) {
        return "B";
    } else if (score >= 70) {
        return "C";
    } else {
        return "F";
    }
}

let grade1 = checkGrade(95);
let grade2 = checkGrade(85);
let grade3 = checkGrade(75);
let grade4 = checkGrade(65);

print("Grade 95: " + grade1 + "\n");
print("Grade 85: " + grade2 + "\n");
print("Grade 75: " + grade3 + "\n");
print("Grade 65: " + grade4 + "\n");
